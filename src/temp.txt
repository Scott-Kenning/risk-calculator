import { useState } from 'react';
import './App.css';

function App() {
  const [attackerTroops, setAttackerTroops] = useState(3);
  const [defenderTroops, setDefenderTroops] = useState(2);
  const [winOdds, setWinOdds] = useState(null);

  const calculateOdds = () => {
    const winProbability = calculateBattleProbability(attackerTroops, defenderTroops);
    const winPercentage = (winProbability * 100).toFixed(2);
    setWinOdds(winPercentage);
  };

  const calculateBattleProbability = (attackerTroops, defenderTroops) => {
    const dp = Array.from({ length: attackerTroops + 1 }, () => Array(defenderTroops + 1).fill(null));

    const probabilities = {
      '1v1': { attackerWins: 15 / 36, defenderWins: 21 / 36 },
      '2v1': { attackerWins: 125 / 216, defenderWins: 91 / 216 },
      '2v2': { attackerWinsBoth: 55 / 216, defenderWinsBoth: 144 / 216, bothLoseOne: 17 / 36 },
      '3v1': { attackerWins: 855 / 1296, defenderWins: 441 / 1296 },
      '3v2': { attackerWinsBoth: 2890 / 7776, defenderWinsBoth: 2275 / 7776, bothLoseOne: 2611 / 7776 }
    };

    const battleProb = (a, d) => {
      if (dp[a][d] !== null) return dp[a][d];
      if (a <= 1) return dp[a][d] = 0;
      if (d === 0) return dp[a][d] = 1;

      let winProb = 0;

      if (a >= 4 && d >= 2) {
        winProb += probabilities['3v2'].attackerWinsBoth * battleProb(a, d - 2);
        winProb += probabilities['3v2'].defenderWinsBoth * battleProb(a - 2, d);
        winProb += probabilities['3v2'].bothLoseOne * battleProb(a - 1, d - 1);
      } else if (a >= 4 && d === 1) {
        winProb += probabilities['3v1'].attackerWins * battleProb(a, d - 1);
        winProb += probabilities['3v1'].defenderWins * battleProb(a - 1, d);
      } else if (a === 3 && d >= 2) {
        winProb += probabilities['2v2'].attackerWinsBoth * battleProb(a, d - 2);
        winProb += probabilities['2v2'].defenderWinsBoth * battleProb(a - 2, d);
        winProb += probabilities['2v2'].bothLoseOne * battleProb(a - 1, d - 1);
      } else if (a === 3 && d === 1) {
        winProb += probabilities['2v1'].attackerWins * battleProb(a, d - 1);
        winProb += probabilities['2v1'].defenderWins * battleProb(a - 1, d);
      } else if (a === 2 && d >= 1) {
        winProb += probabilities['1v1'].attackerWins * battleProb(a, d - 1);
        winProb += probabilities['1v1'].defenderWins * battleProb(a - 1, d);
      }

      return dp[a][d] = winProb;
    };

    return battleProb(attackerTroops, defenderTroops);
  };

  return (
    <main className="container mx-auto p-4">
      <h1 className="text-4xl mb-4">Risk Attack Win Odds Calculator</h1>
      <div className="bg-white p-6 rounded-lg shadow-md">
        <div className="mb-4">
          <label className="block text-gray-700 text-sm font-bold mb-2" htmlFor="attackerTroops">
            Attacker Troops
          </label>
          <input
            id="attackerTroops"
            type="number"
            value={attackerTroops}
            onChange={(e) => setAttackerTroops(parseInt(e.target.value) || 0)}
            className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
            min="1"
            max="1000"
          />
        </div>
        <div className="mb-4">
          <label className="block text-gray-700 text-sm font-bold mb-2" htmlFor="defenderTroops">
            Defender Troops
          </label>
          <input
            id="defenderTroops"
            type="number"
            value={defenderTroops}
            onChange={(e) => setDefenderTroops(parseInt(e.target.value) || 0)}
            className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
            min="1"
            max="1000"
          />
        </div>
        <button
          onClick={calculateOdds}
          className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
        >
          Calculate Odds
        </button>
        {winOdds !== null && (
          <div className="mt-4">
            <h2 className="text-xl font-bold">Win Odds:</h2>
            <p>Attacker Win Percentage: {winOdds}%</p>
          </div>
        )}
      </div>
    </main>
  );
}

export default App;
